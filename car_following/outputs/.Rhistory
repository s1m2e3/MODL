gc()
gc()
install.packages("rgdal")
library(rgdal)
av=available.packages(filters=list())
av[av[,"Package"]==rgdalm]
av[av[,"Package"]==rgdal,]
av[av[,"Package"]==pkg,]
av[av[,"Package"]=="pkg",]
available.packages(repos = "https://cran.r-project.org")[,"Package"]
install.packages("rgdal", dependencies = TRUE)
install.packages("devtools")
library(devtools)
available_versions <- devtools::available_packages("rgdal")
available.packages("rgdal")
library(dplyr)
library(MASS)
library(ks)
library(slider)
library(ggplot2)
library(RColorBrewer)
library(ggnewscale)
library(cowplot)
library(HDInterval)
library(zoo)
library(tidyr)
library(tibble)
library(tseries)
library(forecast)
library(zoo)
library(patchwork)
library(jsonlite)
setwd("C:/Users/samil/Documents/MODL/car_following/outputs")
data_clean <- read.csv("rnn_data_clean.csv")
data_guided <- read.csv("rnn_data_constrained.csv")
data_clean$iteration_number = as.numeric(data_clean$iteration_number)
data_guided$iteration_number = as.numeric(data_guided$iteration_number)
data_clean$trajectory_step = as.numeric(data_clean$trajectory_step)
data_guided$trajectory_step = as.numeric(data_guided$trajectory_step)
data_clean = data_clean%>%filter(trajectory_step %% 10 == 0 | trajectory_step == 99)
data_guided = data_guided%>%filter(trajectory_step %% 10 == 0 | trajectory_step == 99)
data_clean$source = "unguided"
data_guided$source = "guided"
df = rbind(data_clean,data_guided)
df_states = df %>% filter(concept == 'x' | concept == 'u' |concept == 'u_init' | concept == 'u_final')
df_states$element = paste(df_states$concept, df_states$vector_index, sep = "_")
wide_df_states = pivot_wider(
data =df_states,
names_from =element,
values_from = value,
id_cols = c(trajectory_step,iteration_number,source)
)
wide_df_states = wide_df_states %>% filter(trajectory_step != 0 |trajectory_step != 30)
plot_positions = ggplot(wide_df_states)+geom_point(aes(x=x_1,y=x_2,color=as.factor(trajectory_step)))+facet_wrap(~source)
plot_distance = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=sqrt((x_1-15)**2+(x_2-15)**2),color=as.factor(trajectory_step)))+facet_wrap(~source)
plot_speed = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=u_1,color=as.factor(trajectory_step)))+facet_wrap(~source)
plot_angle = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=u_2,color=as.factor(trajectory_step)))+facet_wrap(~source)
plot_speed_init = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_1,color=as.factor(trajectory_step)))
plot_angle_init = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2,color=as.factor(trajectory_step)))
plot_speed_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_1-u_final_1,color=as.factor(trajectory_step)))
plot_angle_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2-u_final_2,color=as.factor(trajectory_step)))+
scale_color_brewer(palette="Set3")
plot_angle_change
plot_angle_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2-u_final_2,color=as.factor(trajectory_step)),size=3)+
scale_color_brewer(palette="Set3")
plot_angle_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2-u_final_2,color=as.factor(trajectory_step)),linewidth=3)+
scale_color_brewer(palette="Set3")
plot_angle_change
plot_angle_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2-u_final_2,color=as.factor(trajectory_step)),linewidth=2)+
scale_color_brewer(palette="Set3")
plot_angle_change
wide_df_states$trajectory_step = as.numeric(wide_df_states$trajectory_step)
wide_df_states = wide_df_states %>% filter(trajectory_step != 0 |trajectory_step != 30)
plot_angle_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2-u_final_2,color=as.factor(trajectory_step)),linewidth=2)+
scale_color_brewer(palette="Set3")
plot_angle_change
View(wide_df_states)
plot_speed_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_1-u_final_1,color=as.factor(trajectory_step)),linewidth=2)
plot_speed_change
plot_speed
plot_distance = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=sqrt((x_1-15)**2+(x_2-15)**2),color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)
plot_speed = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=u_1,color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)
plot_angle = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=u_2,color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)
plot_speed
wide_df_states$trajectory_step = as.numeric(wide_df_states$trajectory_step)
wide_df_states = wide_df_states %>% filter(trajectory_step != 0 |trajectory_step != 30)
View(wide_df_states)
wide_df_states$trajectory_step = as.numeric(wide_df_states$trajectory_step)
wide_df_states = wide_df_states %>% filter(trajectory_step == 0 |trajectory_step == 10|trajectory_step == 20|trajectory_step == 50| trajectory_step == 90|trajectory_step == 99)
View(wide_df_states)
plot_distance = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=sqrt((x_1-15)**2+(x_2-15)**2),color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)
plot_speed = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=u_1,color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)
plot_angle = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=u_2,color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)
plot_speed_init = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_1,color=as.factor(trajectory_step)),linewidth=2)
plot_angle_init = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2,color=as.factor(trajectory_step)),linewidth=2)
plot_speed_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_1-u_final_1,color=as.factor(trajectory_step)),linewidth=2)
plot_angle_change = ggplot(wide_df_states%>%filter(source=="guided"))+geom_line(aes(x=as.numeric(iteration_number),y=u_init_2-u_final_2,color=as.factor(trajectory_step)),linewidth=2)+
scale_color_brewer(palette="Set3")
plot_distance
plot_speed
plot_angle
plot_speed_change
plot_angle_change
plot_positions = ggplot(wide_df_states)+geom_point(aes(x=x_1,y=x_2,color=as.factor(trajectory_step)))+facet_wrap(~source)
plot_positions
plot_positions = ggplot(wide_df_states)+geom_line(aes(x=x_1,y=x_2,color=as.factor(trajectory_step)))+facet_wrap(~source)
plot_positions
plot_distance = ggplot(wide_df_states)+geom_line(aes(x=as.numeric(iteration_number),y=sqrt((x_1-15)**2+(x_2-15)**2),color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)+
scale_color_brewer(palette="Set3")
plot_positions = ggplot(wide_df_states)+geom_line(aes(x=x_1,y=x_2,color=as.factor(trajectory_step)))+facet_wrap(~source)+
scale_color_brewer(palette="Set3")
plot_positions
plot_positions = ggplot(wide_df_states)+geom_line(aes(x=x_1,y=x_2,color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)+
scale_color_brewer(palette="Set3")
plot_positions
wide_df_states <- wide_df_states %>%
arrange(trajectory_step, iteration_number)
plot_positions = ggplot(wide_df_states)+geom_line(aes(x=x_1,y=x_2,color=as.factor(trajectory_step)),linewidth=2)+facet_wrap(~source)+
scale_color_brewer(palette="Set3")
plot_positions
plot_positions = ggplot(wide_df_states)+geom_line(aes(x=x_1,y=x_2,color=as.factor(trajectory_step),
group = interaction(trajectory_step, source)),linewidth=2)+facet_wrap(~source)+
scale_color_brewer(palette="Set3")
plot_positions
plot_positions = ggplot(wide_df_states)+geom_line(aes(x=x_1,y=x_2,color=as.factor(trajectory_step),
group = interaction(trajectory_step, iteration_number)),linewidth=2)+facet_wrap(~source)+
scale_color_brewer(palette="Set3")
plot_positions
plot_positions = ggplot(wide_df_states)+geom_line(aes(x=x_1,y=x_2,color=as.factor(trajectory_step),
group = interaction(as.factor(trajectory_step), as.factor(iteration_number))),linewidth=2)+facet_wrap(~source)+
scale_color_brewer(palette="Set3")
plot_positions
